# "왼쪽부터 차례대로" 바닥을 덮개로 채운다고 생각!

# i번째 위치에서
# (1) 왼쪽부터 i-1까지 길이가 덮개로 이미 채워져 있으면, 2x1 덮개만 채우기 가능 => 1가지 경우만 존재
# (2) 왼쪽부터 i-2까지 길이가 덮개로 이미 채워져 있으면, 1x2 덮개 두 개를 덮는 경우 / 2x2 덮개 하나를 덮는 경우 => 2가지 경우 존재 (2x1은 (1)에서 이미 고려되었으므로 제외)

# 점화식 : Ai = Ai-1 + Ai-2 * 2 (= Ai = Ai-1 + Ai-2 + Ai-2)

n = int(input())

# DP 테이블 초기화
d = [0] * 1001

# DP진행(바텀업 방식)
d[1] = 1 # ([2x1] - 1)
d[2] = 3 # ([2x1] - 2 or [1x2] - 2 or [2x2] - 1)

for i in range(3, n + 1):
  d[i] = (d[i - 1] + d[i - 2] * 2) % 796796 # 결과값이 매우 커지는 것 방지(출력 조건)

print(d[n])
